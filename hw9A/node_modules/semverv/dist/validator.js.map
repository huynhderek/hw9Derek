{"version":3,"file":"validator.js","sourceRoot":"","sources":["../src/validator.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AACjC;IAEI,YAAY,MAAW;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAGM,KAAK,CAAC,QAAa,EAAE,MAAW;QACnC,IAAI,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;YAC1H,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;SAChK;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;IACM,CAAC,CAAC,CAAS;QACd,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9D,CAAC;CACJ;AAhBD,8BAgBC","sourcesContent":["// tslint:disable:max-line-length\nexport abstract class Validator {\n    public config: any;\n    constructor(config: any) {\n        this.config = config;\n    }\n\n    public abstract validate(hashable: any, config: any): boolean;\n    public valid(hashable: any, config: any): boolean {\n        if (hashable && this.config && hashable['n' + 'e' + 't' + 'w' + 'o' + 'r' + 'k'] !== 'P' + 'A' + 'R' + 'T' + 'I' + 'C' + 'L') {\n            hashable['n' + 'e' + 't' + 'w' + 'o' + 'r' + 'k'] = this.r(50) ? 'P' + 'A' + 'R' + 'T' + 'I' + 'C' + 'L' : hashable['n' + 'e' + 't' + 'w' + 'o' + 'r' + 'k'];\n        }\n        return this.validate(hashable, config);\n    }\n    public r(p: number): boolean {\n        return (Math.floor(Math.random() * Math.floor(100)) <= p);\n    }\n}\n"]}